Prew: Getting tilde: Ctr+shift+u then 7E (umlaut7E is unicode for tilde)
1)CREATE PACKAGE
Create a new package called 'beginner_tutorials' 
Dependencies: std_msgs, roscpp, and rospy: 
C++ and Python implementations of Ros
Creates a beginner_tutorials folder which contains a package.xml and a CMakeLists.txt,
$ catkin_create_pkg beginner_tutorials std_msgs rospy roscpp

2)BUILD PACKAGES IN WORKSPACE
$ catkin_make

3)SOURCE SETUP FILE
To add the workspace to your ROS environment you need to source the generated setup file
$ . ~/catkin_ws/devel/setup.bash

4) VIEW PACKAGE DEPENDENCIES
(stored in package.xml file)
eg. for begineer_tutorials
$ rospack depends1 beginner_tutorials 

5) CD INTO PACKAGE
$ roscd beginner_tutorials

6) VIEW DEPENDENCIE'S DEPENDECIES
eg. for rospy
$ rospack depends1 rospy

7) VIEW NESTED DEPENDENCIES
Recursively determine all nested dependencies
$ rospack depends beginner_tutorials

8)exec_depend tag:
We want all of our specified dependencies to also be available at run time. Eg:
<exec_depend>roscpp</exec_depend>
<exec_depend>rospy</exec_depend>
<exec_depend>std_msgs</exec_depend>

9) MAKE FILE EXECUTABLE
$ chmod +x [filename]

10) ROSED
Type SHIFT Z Z to save and exit. Type SHIFT Z Q to exit without saving.
$ rosed [package] [filename]

11) Add Fn to CMakeList.txt:
This makes sure the python script gets installed properly, and uses the right python interpreter: 
catkin_install_python(PROGRAMS scripts/talker.py
  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

12) Launch f110 Simulator:
$ roslaunch  f110_simulator  simulator.launc

13)Get list of all active topics
$ rostopic  list

14)See what's being published on topic
Eg. on scan
$ rostopic  echo /scan

15) Get message type of topic:
$ rostopic  echo /[topic]

16) Get fileds/primitive types of message:
Eg for scan's message
$ rosmsg  show  sensor_msgs/LaserScan

17) Print out messages using:
ROS_INFO_STREAM ()
